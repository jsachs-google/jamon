<?xml version="1.0"?>

<project name="Jamon documentation" default="build">

  <description>----------------------------------------------------------------
Documentation for the Jamon project.  Jamon itself is used to build
the documentation thus taking care of issues such as escaping.
-----------------------------------------------------------------</description>

  <property file="build.properties"/>
  <property file="../build.properties"/>
  <property file="${user.home}/.ant.properties"/>

  <property name="build.dir" value="build"/>
  <property name="work.dir" value="${build.dir}/work"/>
  <property name="www.dir" value="${build.dir}/www"/>
  <property name="doc.dir" value="${build.dir}/www"/>
  <property name="tutorial.dir" value="${doc.dir}/tutorial"/>
  <property name="samples.dir" value="sample"/>
  <property name="tutorial.samples.dir" value="${samples.dir}/tutorial"/>
  <property name="overview.samples.dir" value="${samples.dir}/overview"/>
  <property name="classes.dir" value="${www.dir}/classes"/>
  <property name="java.lib.jamon" location="../jamon.jar"/>
  <property name="java.lib.diff" value="/usr/local/share/java/diff.jar"/>
  <property name="invoker.class" value="org.jamon.InvokerTool" />

  <property name="web.inf.dir" value="./WEB-INF"/>
  <property name="build.classes.dir" value="${web.inf.dir}/classes"/>
  <property name="src.dir" value="src"/>

  <property name="tomcat.home" value="env.TOMCAT_HOME"/>
  <property name="tomcat.common.lib" value="${tomcat.home}/common/lib"/>

  <property name="invoker.compiler" value="${build.compiler}"/>

  <property name="com.sun.tools.jar" value="${java.home}/../lib/tools.jar"/>

  <fileset id="build-files" dir="${build.dir}"/>
  <fileset id="servlet-build-files" dir="${build.classes.dir}"/>

  <target name="init">
    <dirname property="this.dir" file="build.xml" />
    <mkdir dir="${doc.dir}"/>
    <mkdir dir="${build.dir}"/>
    <copy file="base.css" todir="${doc.dir}" />
    <copy file="earthaddress.gif" todir="${doc.dir}" />
    <copy file="favicon.ico" todir="${doc.dir}" />
    <copy file="robots.txt" todir="${doc.dir}" />

    <copy todir="${www.dir}">
      <fileset id="servlet.control.files" dir="sample/servlet">
        <include name="web.xml"/>
        <include name="build.xml"/>
      </fileset>
    </copy>
    <copy todir="${www.dir}/example2">
      <fileset refid="servlet.control.files"/>
    </copy>

    <copy file="sample/servlet/templates/HelloTemplate.jamon"
          todir="${www.dir}/templates/foo/bar/"/>
    <copy file="sample/servlet/src/HelloServlet.java"
          todir="${www.dir}/src/foo/bar"/>

    <copy todir="${www.dir}/example2/src/foo/bar">
      <fileset dir="sample/standardLibrary/src">
        <include name="*.java"/>
      </fileset>
    </copy>
    <copy file="sample/standardLibrary/templates/HelloTemplate.jamon"
          todir="${www.dir}/example2/templates/foo/bar/"/>

    <!-- Copy the various files needed for Appendix A -->
    <copy todir="${www.dir}">
      <fileset dir="resources">
        <include name="server.xml"/>
        <include name="tomcat-users.xml"/>
        <include name="catalina.policy"/>
        <include name="default-web.xml"/>
      </fileset>
    </copy>

    <taskdef name="invoker"
             classname="org.jamon.ant.InvokerTask"
             classpath="${java.lib.jamon}" />
    <condition property="org.jamon.invoker.compiler" value="jikes">
      <equals arg1="${invoker.compiler}" arg2="jikes"/>
    </condition>
    <condition property="org.jamon.invoker.compiler" value="javac">
      <not><equals arg1="${invoker.compiler}" arg2="jikes"/></not>
    </condition>
    <taskdef name="jamon"
             classname="org.jamon.ant.JamonTask"
             classpath="${java.lib.jamon}" />
    <dependset>
      <srcfileset file="${java.lib.jamon}"/>
      <targetfileset refid="build-files"/>
    </dependset>
    <jamon destdir="${work.dir}" srcdir="${overview.samples.dir}/templates">
      <include name="QsTemp.jamon"/>
    </jamon>
    <property name="tutorial.jamon" value="${tutorial.samples.dir}/templates"/>
    <property name="tutorial.src" value="${tutorial.samples.dir}/src"/>
    <jamon destdir="${work.dir}" srcdir="${tutorial.jamon}"/>
    <jamon destdir="${work.dir}" srcdir="templates"/>
    <javac destdir="${work.dir}"
           classpath="${java.lib.jamon}"
           includes="*.java" >
      <src path="${tutorial.src}" />
      <src path="${overview.samples.dir}/src" />
      <src path="${work.dir}" />
    </javac>
  </target>

  <target name="overview-files" depends="init" >
    <property name="build.sysclasspath" value="last" />
    <copy file="${overview.samples.dir}/src/JamonQs.java" todir="${doc.dir}"/>
    <copy file="${overview.samples.dir}/templates/QsTemp.jamon"
          todir="${doc.dir}"/>
    <zip destfile="${www.dir}/JamonQs.zip"
         basedir="${www.dir}"
         includes="JamonQs.java,QsTemp.jamon" />
  </target>

  <target name="tutorial" depends="init" description="Tutorial docs">
    <property name="build.sysclasspath" value="last"/>
    <mkdir dir="${tutorial.dir}"/>
    <zip destfile="${tutorial.dir}/JamonTutorial.zip"
         basedir="${tutorial.samples.dir}"
         includes="**/*"/>
    <copy todir="${tutorial.dir}" >
      <fileset dir="${tutorial.src}">
        <include name="**/*.java"/>
      </fileset>
      <fileset dir="${tutorial.jamon}">
        <include name="**/*.jamon"/>
      </fileset>
    </copy>
    <zip destfile="${www.dir}/Tutorial.zip"
         basedir="${www.dir}"
         includes="*.java,*.jamon" />
  </target>

  <target name="grind">
    <echo message="creating ${template}"/>
    <invoker classpath="${work.dir}:${this.dir}:${java.lib.jamon}:${java.lib.diff}"
             dynamicRecompilation="false"
             output="${this.dir}/${doc.dir}/${template}.html"
             template="/org/jamon/doc/${template}" />
  </target>

  <target name="doc"
          description="Generates all the documentation"
          depends="init" >
    <antcall target="overview-files" />
    <antcall target="tutorial" />
    <echo message="compiling templates"/>
    <javac destdir="${work.dir}"
           classpath="${java.lib.jamon}:${java.lib.diff}:${work.dir}"
           includes="**/*.java" >
      <src path="${work.dir}" />
    </javac>
    <antcall target="grind">
      <param name="template" value="Contact" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="Overview" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="BuildingProjects" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="UserGuide" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="GeneratedTemplates" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="Reference" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="index" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="JamonTask" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="InvokerTask" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="About" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="News" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="Features" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="Download" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="Servlets" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="tutorial/TutorialPath" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="tutorial/TutorialSample1" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="tutorial/TutorialSample2" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="tutorial/TutorialSample3" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="tutorial/TutorialSample4" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="tutorial/TutorialSample5" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="tutorial/TutorialSample6" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="tutorial/TutorialSample7" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="tutorial/TutorialSample8" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="tutorial/TutorialSample9" />
    </antcall>
    <antcall target="grind">
      <param name="template" value="tutorial/TutorialSample10" />
    </antcall>
  </target>

  <target name="war" depends="doc">
    <ant dir="${www.dir}" />
    <ant dir="${www.dir}/example2" />
  </target>

  <target name="zip"
          depends="doc">
    <zip destfile="${www.dir}/foobar.zip"
         basedir="${www.dir}"
         includes="src/**,templates/**,web.xml,build.xml">
    </zip>
    <zip destfile="${www.dir}/example2/foobar.zip"
         basedir="${www.dir}/example2"
         includes="src/**,templates/**,web.xml,build.xml">
    </zip>
  </target>

  <target name="build"
          depends="war,zip">
    <ant dir="${www.dir}" target="clean" />
  </target>

  <target name="cvsignores">
    <echo file=".cvsignore">.cvsignore ${build.dir} build.properties
</echo>
  </target>

  <target name="clean">
    <delete dir="${build.dir}"/>
    <delete dir="${build.classes.dir}"/>
  </target>

  <target name="spotless" depends="clean">
    <delete file=".cvsignore"/>
  </target>

  <target name="compile-servlet"
          description="Compile the servlet">
    <dependset>
      <srcfileset file="${java.lib.jamon}"/>
      <targetfileset refid="servlet-build-files"/>
    </dependset>
    <mkdir dir="${build.classes.dir}"/>
    <javac destdir="${build.classes.dir}"
           debug="true"
           deprecation="true"
           classpath="${java.lib.jamon}:${tomcat.common.lib}/servlet.jar"
           srcdir="${src.dir}"
           failonerror="true"/>
  </target>

  <target name="servlet" depends="init,compile-servlet"
          description="Run the servlet">
    <mkdir dir="${work.dir}" />
    <java classname="org.apache.catalina.startup.Catalina"
          failonerror="true"
          fork="yes"
          dir=".">
      <classpath>
        <pathelement location="${java.lib.jamon}"/>
        <pathelement location="${java.lib.diff}"/>
        <pathelement location="${tomcat.home}/server/lib/servlets-default.jar"/>
        <pathelement location="${com.sun.tools.jar}"/>
        <fileset dir="${tomcat.common.lib}" includes="*.jar" />
        <fileset dir="${tomcat.home}/server/lib" includes="*.jar" />
        <fileset dir="${tomcat.home}/bin" includes="*.jar" />
        <pathelement location="${work.dir}" />
        <pathelement location="${this.dir}" />
      </classpath>
      <sysproperty key="catalina.home" value="."/>
      <arg line="-config server.xml start" />
    </java>
  </target>

</project>
