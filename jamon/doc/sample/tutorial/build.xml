<?xml version="1.0"?>

<!-- READ ME  -  READ ME  -  READ ME  -  READ ME  -  READ ME  -  READ ME

This build file builds all the Jamon templates and Java files in the
Jamon Tutorial. To run this build, you must either copy jamon.jar to
parent directory of the location of this build file or alter the
property java.lib.jamon, below, to reflect the location of the
jamon.jar file.

To process the Jamon templates, run 'ant jamon'.

To compile the Java source files and the translated Jamon
templates, run 'ant compile'. This task also processes the Jamon
templates, if they have not been processed.

To run any particular example, run 'ant -Dsample=<name of Java class> run'.
For example, to run the HelloTut1 example, run 'ant -Dsample=HelloTut1 run'.

To clean all generated files, run 'ant clean'.

To become an expert in Jamon, work through the tutorial.

-->

<project name="Jamon documentation" default="build">

  <description> Builds the Jamon tutorial samples. </description>

  <property file="build.properties"/>

  <property name="build.dir" value="build"/>
  <property name="work.dir" value="${build.dir}/work"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="java.lib.jamon" location="../jamon.jar"/>
  <property name="invoker.class" value="org.jamon.InvokerTool" />

  <property name="src.dir" value="src"/>

  <property name="invoker.compiler" value="${build.compiler}"/>

  <property name="com.sun.tools.jar" value="${java.home}/../lib/tools.jar"/>

  <property file="../core/src/org/jamon/Resources.properties" />
  <property name="tarfilebase" value="jamon-${org.jamon.version}" />
  <property name="tarball.src" value="${tarfilebase}-src.tgz" />
  <property name="tarball.bin" value="${tarfilebase}.tgz" />
  <property name="zip.src" value="${tarfilebase}-src.zip" />
  <property name="zip.bin" value="${tarfilebase}.zip" />


  <target name="init">
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${work.dir}"/>
    <taskdef name="invoker"
             classname="org.jamon.ant.InvokerTask"
             classpath="${java.lib.jamon}" />
    <condition property="org.jamon.invoker.compiler" value="jikes">
      <equals arg1="${invoker.compiler}" arg2="jikes"/>
    </condition>
    <condition property="org.jamon.invoker.compiler" value="javac">
      <not><equals arg1="${invoker.compiler}" arg2="jikes"/></not>
    </condition>
    <taskdef name="jamon"
             classname="org.jamon.ant.JamonTask"
             classpath="${java.lib.jamon}" />
  </target>

  <target name="clean" >
    <delete dir="${build.dir}"/>
  </target>

  <target name="jamon" depends="init" >
    <jamon destdir="${work.dir}" srcdir="templates">
    </jamon>
  </target>

  <target name="compile" depends="jamon" >
    <dependset>
      <srcfileset dir="templates" includes="*" />
      <srcfileset dir="src" includes="*" />
      <targetfilelist dir="${build.dir}" files="**/*" />
    </dependset>
    <javac destdir="${classes.dir}"
           classpath="${java.lib.jamon}" >
      <src path="src" />
      <src path="${work.dir}" />
    </javac>
  </target>

  <target name="run" depends="compile" >
    <antcall target="_runClass">
      <param name="sample.name" value="${sample}" />
    </antcall>
  </target>

  <target name="_runClass">
    <java classname="${sample.name}"
          classpath="${classes.dir}:${java.lib.jamon}" />
  </target>

</project>
