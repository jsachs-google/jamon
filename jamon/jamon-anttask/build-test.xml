<?xml version="1.0"?>

<project name="TestTask" default="test">

    <description>Test the Ant task for Jamon</description>

    <property name="build.dir" value="target"/>
    <property name="work.dir" value="${build.dir}/test-work"/>
    <property name="test.src.dir" value="${build.dir}/test-src"/>
	<property name="templates.dir" value="src/test/templates"/>
    <target name="test" depends="init,test-invoker,test-jamon"/>

    <target name="init">
        <mkdir dir="${work.dir}"/>
        <mkdir dir="${test.src.dir}"/>
    </target>

    <target name="test-jamon">
        <taskdef name="jamon" classname="org.jamon.ant.JamonTask" classpathref="maven.runtime.classpath"/>
        <jamon destdir="${test.src.dir}" srcdir="${templates.dir}"/>
    </target>

    <target name="test-invoker">
        <taskdef name="invoker" classname="org.jamon.ant.InvokerTask" classpathref="maven.runtime.classpath"/>
        <tempfile property="temp.file" destdir="${build.dir}"/>
        <property name="org.jamon.invoker.compiler" value="javac"/>
        <condition property="org.jamon.invoker.compiler" value="javac">
            <equals arg1="${build.compiler}" arg2="extJavac"/>
        </condition>
        <condition property="org.jamon.invoker.compiler" value="">
            <not>
                <isset property="org.jamon.invoker.compiler"/>
            </not>
        </condition>
        <invoker classpathref="maven.test.classpath" sourceDir="${templates.dir}" workDir="${work.dir}" compiler="${org.jamon.invoker.compiler}" template="/bar/Bar" output="${temp.file}"/>
        <invoker sourceDir="${templates.dir}" workDir="${work.dir}" compiler="${org.jamon.invoker.compiler}" template="/Foo" output="${temp.file}">
			<classpath refid="maven.test.classpath"/>
            <arg name="i" value="3"/>
            <arg name="b" value="true"/>
        </invoker>
        <property name="test.output" value=""/>
		<pathconvert refid="maven.test.classpath" property="classpath"/>
        <invoker classpath="${classpath}" sourceDir="${templates.dir}" workDir="${work.dir}" compiler="${org.jamon.invoker.compiler}" template="/Foo" property="test.output">
            <arg name="i" value="3"/>
            <arg name="b" value="true"/>
        </invoker>
        <condition property="test.ok">
            <equals arg1="${test.output}" arg2="Bla3true"/>
        </condition>
		<delete file="${temp.file}"/>
        <fail unless="test.ok" message="output was ${test.output}"/>
    </target>

    <target name="clean">
        <delete dir="${test.src.dir}"/>
        <delete dir="${work.dir}"/>
    </target>

    <target name="spotless" depends="clean"/>

</project>
