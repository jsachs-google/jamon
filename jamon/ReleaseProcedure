General points:
* Since maven fails to understand usernames in scpexe urls, ensure ~/.ssh/config contains:
  Host maven.jamon.org
  User jamon
* Since maven cannot ask for passwords during release:perform,
  you'll need an ssh-agent set up that has credentials to reach jamon@maven.jamon.org.
* For hygene purposes, you should have a settings file in ~/.m2jamon/settings.xml:

<?xml version="1.0" encoding="UTF-8"?>
<settings>
  <localRepository>${user.home}/.m2jamon/repository</localRepository>
</settings>

  Prior to any release, rm -rf ~/.m2jamon/repository

* Update docs to reflect release.
* Run svn up to get latest version number set
* For each maven module being released:
** Update all SNAPSHOT versions to the latest released version.
** Run (in zsh):
  echo -n "password: "; read -s password; \
  mvn -s ~/.m2jamon/settings.xml -Dusername=$SOURCEFORGE_USERNAME -Dpassword=$password release:prepare; \
  unset password
** Run
  mvn -s ~/.m2jamon/settings.xml release:perform
** Run
  svn revert pom.xml
* If necessary, build jamonStdLib
* generate new site docs
** Docs can be viewed via mvn -s ~/.m2jamon/settings.xml package and looking in target/www.
** Trial deploy: mvn -s ~/.m2jamon/settings.xml site:deploy goes to www-stg.jamon.org.
** Release as for other maven modules.

* Update versions in jamon-dist, run
  mvn -s ~/.m2jamon/settings.xml package
* Upload dist files to sourceforge:
** Log into sourceforge.
** Navigate to https://sourceforge.net/projects/jamon/files/jamon/
** Create a new folder, jamon-dist-YYYY.MM.DD
** Upload the tar.gz and zip files from jamon-dist/target.
** Clicking on the info button for each file, mark the zip file the
   default download for Windows and Other, and the tar.gz file the
   default download for Linux, Solaris, FreeBSD and Mac.,

TYCHO RELEASE

* If an update for the parent pom is necessary. For some reason, -N doesn't work well in release:prepare,
  so go old school:
  svn copy \
    https://jamon.svn.sourceforge.net/svnroot/jamon/trunk/jamon-eclipse \
    https://jamon.svn.sourceforge.net/svnroot/jamon/releases/jamon-eclipse/jamon-eclipse-${VERSION} \
    -m "tag for release ${VERSION}"
  svn co https://jamon.svn.sourceforge.net/svnroot/jamon/releases/jamon-eclipse/jamon-eclipse-${VERSION}

  cd jamon-eclipse-${VERSION}
* edit version number in pom.
* commit.
* deploy:
  mvn3 -s ~/.m2jamon/settings.xml -N deploy;

* To release a component, set COMPONENT and VERSION appropriately, and:
* Note that we copy all of jamon-eclipse in the tag; we'll need the update site available during
  the build.

  svn copy \
    https://jamon.svn.sourceforge.net/svnroot/jamon/trunk/jamon-eclipse/ \
    https://jamon.svn.sourceforge.net/svnroot/jamon/releases/${COMPONENT}/${COMPONENT}-${VERSION} \
    -m "tag for release ${VERSION}"

  svn co https://jamon.svn.sourceforge.net/svnroot/jamon/releases/${COMPONENT}/${COMPONENT}-${VERSION}

  cd ${COMPONENT}-${VERSION}/${COMPONENT}

* The following no longer seems to work:
--  mvn3 -s ~/.m2jamon/settings.xml org.eclipse.tycho:tycho-versions-plugin:set-version -DnewVersion=${VERSION}

* So instead,try something like:
rgrep -l "$VERSION\(-SNAPSHOT\|.qualifier\)" | xargs \
 perl -pi -e '$version = "'$VERSION'";
 $escapedVersion = $version;
 $escapedVersion =~ s/\./\\./g;
 s/$escapedVersion(\.qualifier|-SNAPSHOT)/$version/; '

  svn commit -m "prepare for release of version ${VERSION}"

  mvn3 -s ~/.m2jamon/settings.xml clean install

  Then in a checked-out version of update-site, run

  mvn3 -s ~/.m2jamon/settings.xml clean package

* Copy the updated files into updateSite/p2, and explode the content/artifact.jar files
  rsync -av target/site/ p2
  (cd p2; for i in content.jar artifacts.jar; do jar xf $i; rm $i; done)
* add any new artifacts (svn status)
  svn commit p2

* update the site on jamon.maven.org:

  ssh jamon@maven.jamon.org
  cd www/eclipse/updates
  svn up

  cp target/org.jamon.site-1.0.0-site.zip jamon-updateSite-`date +%Y-%m-%d`.zip

* Upload that file to sourceforge via
  https://sourceforge.net/projects/jamon/files/jamon-eclipse-plugin/

* Email release mailing list.
