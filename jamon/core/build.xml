<?xml version="1.0"?>

<project name="Jamon" default="compile">

  <description>
    A compiler that turns typed templates into Java code.
  </description>

  <property file="build.properties"/>
  <property file="../build.properties"/>
  <property file="${user.home}/.ant.properties"/>

  <property name="build.dir" value="build"/>
  <property name="build.src.dir" value="${build.dir}/src"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="tests.classes.dir" value="${build.dir}/testclasses"/>
  <property name="tests.src.dir" value="tests"/>
  <property name="java.lib.junit" value="junit.jar" />

  <property name="junit.timeout" value="1000" />
  <property name="junit.printsummary" value="off" />
  <property name="junit.formatter" value="org.apache.tools.ant.taskdefs.optional.junit.BriefJUnitResultFormatter" />

  <property name="nodeGen.dir" value="nodegen"/>
  <property name="nodeGen.src.dir" value="${nodeGen.dir}/src"/>
  <property name="nodeGen.build.dir" value="${nodeGen.dir}/build"/>
  <property name="nodeGen.classes.dir" location="${nodeGen.build.dir}/classes"/>

  <property name="nodes.file" value="${nodeGen.dir}/nodes"/>

  <property name="src.dir" value="src" />

  <target name="check-parser">
    <uptodate property="parser.uptodate"
              targetfile="${build.src.dir}/org/jamon/node/Node.java">
      <srcfiles dir="src" includes="jamon.grammar"/>
    </uptodate>
  </target>

  <target name="buildNodeGenerator" description="Build the node generator">
	<dependset>
	  <srcfileset dir="${nodeGen.src.dir}" includes="**/*.java"/>
	  <targetfileset dir="${nodeGen.build.dir}"/>
	</dependset>
	<mkdir dir="${nodeGen.build.dir}"/>
	<javac srcdir = "${nodeGen.src.dir}" destdir="${nodeGen.build.dir}"/>
  </target>

  <target name="check-nodes">
    <uptodate property="nodes.uptodate"
              srcfile="${nodes.file}"
              targetfile="${nodes.src.dir}/org/jamon/node/JavaNode.java"/>
  </target>

  <target name="generateNodes"
          description="Generate parser node source files"
          depends="buildNodeGenerator,check-nodes"
          unless="nodes.uptodate">
    <echo message="rebuilding node source files"/>
    <java classname="org.jamon.nodegen.NodesGenerator"
          classpath="${nodeGen.build.dir}"
          fork="true">
      <arg value="${nodes.file}"/>
      <arg value="${build.src.dir}"/>
    </java>
  </target>

  <target name="compile"
          depends="generateNodes"
          description="Compiles all the Java files">
      <mkdir dir="${classes.dir}"/>
      <dependset>
        <srcfileset dir="${src.dir}" includes="**/*.java" />
        <srcfileset dir="${build.src.dir}" includes="**/*.java" />
        <targetfileset dir="${classes.dir}" includes="**/*.class" />
        <targetfileset dir="${tests.classes.dir}" includes="**/*.class" />
      </dependset>
      <javac destdir="${classes.dir}"
             debug="true"
             deprecation="true">
        <src path="${src.dir}"/>
        <src path="${build.src.dir}"/>
        <classpath>
          <pathelement location="${java.lib.junit}"/>
        </classpath>
        <compilerarg line="${org.jamon.jike.options}" compiler="jikes"/>
      </javac>
      <copy todir="${classes.dir}">
        <fileset dir="${src.dir}">
            <include name="**/*.properties"/>
        </fileset>
      </copy>
  </target>

  <target name="clean">
    <delete dir="${classes.dir}"/>
    <delete dir="${tests.classes.dir}"/>
    <delete dir="${nodes.src.dir}"/>
  </target>

  <target name="cvsignores">
    <echo file=".cvsignore">
      .cvsignore
      ${build.dir}
      build.properties
</echo>
  </target>

  <target name="testclasses" depends="compile">
    <mkdir dir="${tests.classes.dir}" />
    <dependset>
      <srcfileset dir="${src.dir}" includes="**/*.java" />
      <srcfileset dir="${build.src.dir}" includes="**/*.java" />
      <srcfileset dir="${tests.src.dir}" includes="**/*.java" />
      <targetfileset dir="${tests.classes.dir}" includes="**/*.class" />
    </dependset>
    <javac srcdir="${tests.src.dir}"
           destdir="${tests.classes.dir}"
           debug="on"
           deprecation="on"
           optimize="on" >
      <include name="**/*.java"/>
      <classpath>
        <pathelement location="${classes.dir}"/>
        <pathelement location="${java.lib.junit}"/>
      </classpath>
      <compilerarg line="${org.jamon.jike.options}" compiler="jikes"/>
    </javac>
  </target>

  <target name="test"
          depends="testclasses"
          description="Run the unit tests">
    <property name="build.sysclasspath" value="last" />
    <junit printsummary="${junit.printsummary}"
           timeout="${junit.timeout}"
           failureproperty="org.jamon.junit.failuresOccured">
      <formatter classname="${junit.formatter}" usefile="no"/>
      <classpath>
        <pathelement location="${tests.classes.dir}"/>
        <pathelement location="${classes.dir}"/>
        <pathelement location="${java.lib.junit}"/>
      </classpath>
      <batchtest>
        <fileset dir="${tests.src.dir}">
          <include name="**/*Test.java" />
          <exclude name="**/Abstract*.java"/>
        </fileset>
      </batchtest>
    </junit>
    <fail message="tests failed" if="org.jamon.junit.failuresOccured" />
  </target>


  <property name="javadoc.dir" value="${build.dir}/javadoc" />
  <property name="javadoc.zip.file" value="jamon-api.zip" />
  <property name="javadoc.zip" value="${javadoc.zip.file}" />

  <target name="javadoc.check" depends="compile">
    <uptodate property="javadoc.build.notrequired"
              targetfile="${javadoc.dir}/index.html" >
      <srcfiles dir="${src.dir}" includes="**/*.java" />
    </uptodate>
  </target>

  <target name="javadoc"
          depends="javadoc.check"
          unless="javadoc.build.notrequired" >
    <mkdir dir="${javadoc.dir}" />
    <javadoc packagenames="org.jamon,org.jamon.escaping"
             sourcepath="${src.dir}"
             classpath="${classes.dir}"
             defaultexcludes="yes"
             destdir="${javadoc.dir}"
             author="true"
             version="true"
             failonerror="true"
             use="true"
             windowtitle="Jamon API Specification">
      <doctitle><![CDATA[<h1>Jamon API</h1>]]></doctitle>
      <link  href="http://java.sun.com/products/jdk/1.3/docs/api/"/>
    </javadoc>
  </target>

</project>
