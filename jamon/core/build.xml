<?xml version="1.0"?>

<project name="Jamon" default="build">

  <description>
    A compiler that turns typed templates into Java code.
  </description>

  <property file="build.properties"/>
  <property file="${user.home}/.ant.properties"/>

  <property name="build.dir" value="build"/>
  <property name="build.src.dir" value="${build.dir}/src"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="test.classes.dir" value="${build.dir}/testclasses"/>
  <property name="tests.src.dir" value="tests"/>
  <property name="test.dir" value="test" />
  <property name="test.src.dir" value="${test.dir}/src" />
  <property name="test.pkg" value="test/jamon"/>
  <property name="test.src2.dir" value="${test.src.dir}/${test.pkg}" />
  <property name="test.classes.dir" value="${test.dir}/classes" />
  <property name="testdata.dir" value="testdata/${test.pkg}" />
  <property name="jarfile" value="jamon.jar" />
  <property name="java.lib.junit" value="junit.jar" />

  <property name="junit.fork" value="no" />
  <property name="junit.timeout" value="1000" />
  <property name="junit.printsummary" value="off" />
  <property name="junit.formatter" value="brief" />

  <property name="java.lib.sablecc"
            value="/usr/local/share/java/sablecc.jar" />
  <property name="java.lib.sablecctask"
            value="/usr/local/share/java/sablecc/anttask.jar"/>

  <target name="init">
    <mkdir dir="${build.src.dir}"/>
  </target>

  <target name="check-parser">
    <uptodate property="parser.uptodate"
              targetfile="${build.src.dir}/org/jamon/node/Node.java">
      <srcfiles dir="src" includes="jamon.grammar"/>
    </uptodate>
  </target>

 <target name="parser"
         depends="init,check-parser"
         unless="parser.uptodate"
         description="Generates parsers from the grammar file">
    <taskdef name="sablecc" classname="org.sablecc.ant.taskdef.Sablecc"
             classpath="${java.lib.sablecctask}:${java.lib.sablecc}"/>
    <sablecc src="src" outputdirectory="${build.src.dir}">
        <include name="jamon.grammar"/>
    </sablecc>
 </target>

  <target name="build"
          depends="parser"
          description="Compiles all the Java files">
      <mkdir dir="${classes.dir}"/>
      <javac destdir="${classes.dir}"
             debug="true"
             depend="true"
             deprecation="true">
        <src path="src"/>
        <src path="${build.src.dir}"/>
      </javac>
      <copy todir="${classes.dir}" >
        <fileset dir="${build.src.dir}" includes="**/*.dat" />
      </copy>
  </target>

  <target name="clean">
    <delete dir="${classes.dir}"/>
  </target>

  <target name="spotless" depends="clean">
    <delete dir="${build.dir}"/>
  </target>

  <target name="cvsignores">
    <echo file=".cvsignore">.cvsignore ${build.dir} build.properties ${test.dir} ${jarfile}
</echo>
  </target>

  <target name="testdirs">
    <delete dir="${test.dir}"/>
    <mkdir dir="${test.src.dir}" />
  </target>

  <target name="testsrc" depends="testdirs">
    <copy file="testdata/Test1.java" todir="${test.src2.dir}" />
  </target>

  <target name="testtemplates" depends="build,testsrc">
    <java fork="true"
          dir="testdata"
          classpath="${classes.dir}:${java.lib.sablecc}"
          classname="org.jamon.TemplateGenerator">
      <arg value="../${test.src.dir}" />
      <arg value="${test.pkg}/TestTemplate" />
      <arg value="${test.pkg}/SubTemplate" />
      <arg value="${test.pkg}/Sub2" />
    </java>
  </target>

  <target name="testbuild" depends="testtemplates">
    <mkdir dir="${test.classes.dir}"/>
    <javac destdir="${test.classes.dir}"
           debug="true"
           classpath="${classes.dir}:{java.lib.sablecc}"
           deprecation="true">
      <src path="${test.src.dir}"/>
    </javac>
  </target>

  <target name="test1" depends="testbuild"
          description="Tests the compiler by rendering a simple template">
    <java fork="true"
          classpath="${classes.dir}:${java.lib.sablecc}:${test.classes.dir}"
          classname="${test.pkg}.Test1" />
  </target>

  <target name="jar" depends="build">
    <jar basedir="${classes.dir}" jarfile="${jarfile}" />
  </target>



  <target name="testclasses" depends="build">
    <mkdir dir="${test.classes.dir}" />
    <javac srcdir="${tests.src.dir}"
           destdir="${test.classes.dir}"
           debug="on"
           deprecation="on"
           optimize="on" >
      <include name="**/*.java"/>
      <classpath>
        <pathelement location="${classes.dir}"/>
        <pathelement location="${java.lib.junit}"/>
      </classpath>
    </javac>
  </target>

  <target name="test"
          depends="testclasses"
          description="Run the unit tests">
    <junit printsummary="${junit.printsummary}"
           fork="${junit.fork}" timeout="${junit.timeout}">
      <formatter type="${junit.formatter}" usefile="no"/>
      <classpath>
        <pathelement location="${test.classes.dir}"/>
        <pathelement location="${classes.dir}"/>
        <pathelement location="${java.lib.junit}"/>
      </classpath>
      <batchtest>
        <fileset dir="${tests.src.dir}">
          <include name="**/*Test.java" />
          <exclude name="**/Abstract*.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

</project>
