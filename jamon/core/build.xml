<?xml version="1.0"?>

<project name="JttCompiler" default="build">

  <description>
    A compiler that turns typed templates in Java code.
  </description>

  <property file="build.properties"/>
  <property file="${user.home}/.ant.properties"/>

  <property name="build.dir" value="build"/>
  <property name="build.src.dir" value="${build.dir}/src"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="dist.dir" value="${build.dir}/dist"/>
  <property name="java.lib.sablecc"
            value="/usr/local/share/java/sablecc.jar" />
  <property name="java.lib.sablecctask"
            value="/usr/local/share/java/sablecc/anttask.jar"/>

  <property name="java.lib.log4j" value="/usr/local/share/java/log4j.jar"/>
  <property name="java.lib.junit" value="/usr/local/share/java/junit.jar"/>

  <path id="class.path">
     <pathelement location="${java.lib.log4j}"/>
     <pathelement location="${java.lib.junit}"/>
  </path>

  <target name="init">
    <mkdir dir="${build.src.dir}"/>
  </target>

  <target name="check-parser">
    <uptodate property="parser.uptodate"
              targetfile="${build.src.dir}/org/contravariant/node/Node.java">
      <srcfiles dir="src" includes="jtt.grammar"/>
    </uptodate>
  </target>

 <target name="parser"
         depends="init,check-parser"
         unless="parser.uptodate"
         description="Generates parsers from the grammar file">
    <taskdef name="sablecc" classname="org.sablecc.ant.taskdef.Sablecc"
             classpath="${java.lib.sablecctask}:${java.lib.sablecc}"/>
    <sablecc src="src" outputdirectory="${build.src.dir}">
        <include name="jtt.grammar"/>
    </sablecc>
 </target>

  <target name="build"
          depends="parser"
          description="Compiles all the Java files">
      <mkdir dir="${classes.dir}"/>
      <javac destdir="${classes.dir}"
             debug="true"
             deprecation="true">
        <src path="src"/>
        <src path="${build.src.dir}"/>
        <classpath refid="class.path"/>
      </javac>
  </target>

  <target name="clean">
    <delete dir="${build.dir}"/>
  </target>

  <target name="spotless" depends="clean" />

  <target name="cvsignores">
    <echo file=".cvsignore">.cvsignore build build.properties</echo>
  </target>

</project>
