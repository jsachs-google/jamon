<?xml version="1.0"?>

<project name="meta" default="jar">

  <description>
    Meta build script for Jamon.  From this script one can
    compile the Jamon engine (project 'core') and the exercise it (project
    'integration').
  </description>

  <property file="build.properties"/>
  <property file="${user.home}/.ant.properties"/>
  <property name="jarfile" value="jamon.jar" />
  <property name="core.classes.dir" value="core/build/classes" />
  <property name="stage.dir" value="stagesite" />


  <target name="test"
          depends="jar"
          description="Run the demo">
    <ant dir="integration" target="test"/>
  </target>

  <target name="core" description="Build the core template engine">
    <ant dir="core" target="compile"/>
  </target>

  <target name="compile" description="Build every project">
    <ant dir="core" target="compile"/>
    <ant dir="anttask" target="compile"/>
    <ant dir="stdlib" target="compile"/>
  </target>

  <target name="jar"
          description="Creates a uber JAR"
          depends="compile">
    <jar jarfile="${jarfile}"
         manifest="manifest" >
      <fileset dir="core/build/classes" />
      <fileset dir="stdlib/build/classes" />
      <fileset dir="anttask/build/classes" />
    </jar>
  </target>

  <target name="cvsignores" description="Generates cvsignore files">
    <ant dir="core" target="cvsignores"/>
    <ant dir="integration" target="cvsignores"/>
    <ant dir="anttask" target="cvsignores"/>
    <ant dir="stdlib" target="cvsignores"/>
    <echo file=".cvsignore">.cvsignore ${jarfile}
</echo>
  </target>

  <target name="spotless">
    <ant dir="core" target="spotless"/>
    <ant dir="integration" target="spotless"/>
    <ant dir="anttask" target="spotless"/>
    <ant dir="stdlib" target="spotless"/>
    <delete file="${jarfile}" />
    <delete file=".cvsignore" />
  </target>

  <target name="clean">
    <ant dir="core" target="clean"/>
    <ant dir="integration" target="clean"/>
    <ant dir="stdlib" target="clean"/>
    <ant dir="anttask" target="clean"/>
  </target>

  <target name="release" depends="core">
    <exec executable="java"
          outputproperty="currentversion">
      <arg value="-cp" />
      <arg value="${core.classes.dir}" />
      <arg value="org.jamon.ShowVersion" />
      <arg value="minor" />
    </exec>
    <exec executable="java"
          outputproperty="majorversion">
      <arg value="-cp" />
      <arg value="${core.classes.dir}" />
      <arg value="org.jamon.ShowVersion" />
      <arg value="major" />
    </exec>
    <exec executable="java"
          outputproperty="nextversion">
      <arg value="-cp" />
      <arg value="${core.classes.dir}" />
      <arg value="org.jamon.ShowVersion" />
      <arg value="nextminor" />
    </exec>
    <echo message="Current version: ${majorversion}.${currentversion}" />
    <echo message="Next version: ${majorversion}.${nextversion}" />
    <property name="file" value="core/src/org/jamon/Resources.properties" />
    <cvs command="edit ${file}"/>
    <replace file="${file}"
             token="minor=${currentversion}"
             value="minor=${nextversion}" />
    <replace file="${file}"
             token="release=false"
             value="release=true" />
    <cvs command="commit -m 'minor version bump to ${nextversion}' ${file}" />
    <cvs command="tag RELEASE-${majorversion}_${nextversion}" />
    <cvs command="edit ${file}"/>
    <replace file="${file}"
             token="release=true"
             value="release=false" />
    <cvs command="commit -m 'dev version of ${currentversion}' ${file}" />
  </target>

  <target name="javadoc">
    <ant dir="core" target="javadoc"/>
  </target>

  <property name="doc.zip" value="jamondoc.zip" />
  <property name="tarfile.src" value="jamon-src.tar" />
  <property name="tarball.src" value="jamon-src.tgz" />
  <property name="tarfile.bin" value="jamon-bin.tar" />
  <property name="tarball.bin" value="jamon-bin.tgz" />

  <target name="doczip" depends="javadoc">
    <zip zipfile="${doc.zip}">
      <zipfileset dir="doc" prefix="doc" />
      <zipfileset dir="core/build/javadoc" prefix="doc/javadoc" />
    </zip>
  </target>

  <target name="bindist" depends="jar,doczip">
    <tar tarfile="${tarfile.bin}"
         baseDir="."
         includes="${doc.zip},${jarfile}" />
    <gzip src="${tarfile.bin}" zipfile="${tarball.bin}" />
  </target>

  <target name="srcdist">
    <tar tarfile="${tarfile.src}">
      <tarfileset dir=".">
        <exclude name="${jarfile}" />
        <exclude name="${stage.dir}" />
        <exclude name="${stage.dir}/**" />
        <exclude name="${tarball.bin}" />
        <exclude name="${tarfile.bin}" />
        <exclude name="${tarball.src}" />
        <exclude name="${tarfile.src}" />
        <exclude name="**/build.properties" />
        <exclude name="**/build" />
        <exclude name="**/build/**" />
      </tarfileset>
    </tar>
    <gzip src="${tarfile.src}" zipfile="${tarball.src}" />
  </target>


  <target name="stage" depends="srcdist, bindist" >
    <mkdir dir="${stage.dir}" />
    <copy todir="${stage.dir}" >
      <fileset dir="doc" />
      <fileset dir="." includes="${tarball.bin}" />
      <fileset dir="." includes="${tarball.src}" />
      <fileset dir="core/build" includes="javadoc/**" />
    </copy>
  </target>

  <target name="push" depends="stage">
    <exec dir="${stage.dir}" executable="rsync">
      <arg value="--verbose" />
      <arg value="--recursive" />
      <arg value="--relative" />
      <arg value="--cvs-exclude" />
      <arg value="--delete" />
      <arg value="--compress" />
      <arg value="." />
      <arg value="${push.dest}" />
    </exec>
  </target>

  <target name="pushstage">
    <property name="push.dest" value="jamon.org:/home/jamon/www/stage" />
    <ant target="push" />
  </target>

  <target name="pushlive">
    <property name="push.dest" value="jamon.org:/home/jamon/www" />
    <ant target="push" />
  </target>

</project>
