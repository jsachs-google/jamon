<?xml version="1.0"?>

<project name="meta" default="jar">

  <description>
    Meta build script for Jamon.  From this script one can
    compile the Jamon engine (project 'core') and the exercise it (project
    'integration').
  </description>

  <property file="build.properties"/>
  <property file="${user.home}/.ant.properties"/>
  <property name="jarfile" value="jamon.jar" />
  <property name="core.classes.dir" value="core/build/classes" />
  <property name="stage.dir" value="site" />
  <property name="dist.dir" value="${stage.dir}/dist" />
  <property file="core/src/org/jamon/Resources.properties" />
  <property name="tarfilebase"
            value="jamon-${org.jamon.version}" />
  <property name="tarball.src" value="${tarfilebase}-src.tgz" />
  <property name="tarball.bin" value="${tarfilebase}.tgz" />
  <property name="zip.src" value="${tarfilebase}-src.zip" />
  <property name="zip.bin" value="${tarfilebase}.zip" />
  <property name="site.dir" value="" />

  <target name="test"
          depends="jar"
          description="Run tests">
    <ant dir="integration" target="test">
      <property name="org.jamon.integration.usejar" value="true" />
    </ant>
  </target>

  <target name="jar"
          description="Creates a uber JAR"
          depends="base">
    <jar jarfile="${jarfile}"
         manifest="manifest" >
      <fileset dir="core/build/classes" />
      <fileset dir="stdlib/build/classes" />
      <fileset dir="anttask/build/classes" />
    </jar>
  </target>

  <target name="base" description="Build and test subprojects">
    <ant dir="core" target="test"/>
    <ant dir="anttask" target="test"/>
    <ant dir="stdlib" target="test"/>
  </target>

  <target name="cvsignores" description="Generates cvsignore files">
    <ant dir="core" target="cvsignores"/>
    <ant dir="integration" target="cvsignores"/>
    <ant dir="anttask" target="cvsignores"/>
    <ant dir="stdlib" target="cvsignores"/>
    <ant dir="doc" target="cvsignores"/>
    <echo file=".cvsignore">.cvsignore ${jarfile}
</echo>
  </target>

  <target name="spotless"
          depends="localclean"
          description="Scrub the workspace">
    <ant dir="core" target="spotless"/>
    <ant dir="integration" target="spotless"/>
    <ant dir="anttask" target="spotless"/>
    <ant dir="stdlib" target="spotless"/>
    <ant dir="doc" target="spotless"/>
    <delete file="${jarfile}" />
    <delete file=".cvsignore" />
  </target>

  <target name="localclean">
    <delete file="${tarball.src}" />
    <delete file="${tarball.bin}" />
    <delete file="${zip.src}" />
    <delete file="${zip.bin}" />
    <delete dir="${stage.dir}" />
  </target>

  <target name="clean"
          depends="localclean"
          description="Remove build artifacts">
    <ant dir="core" target="clean"/>
    <ant dir="integration" target="clean"/>
    <ant dir="stdlib" target="clean"/>
    <ant dir="anttask" target="clean"/>
  </target>

  <target name="major-release" depends="base">
    <exec executable="java"
          outputproperty="jamon.version.next">
      <arg value="-cp" />
      <arg value="${core.classes.dir}" />
      <arg value="org.jamon.ShowVersion" />
      <arg value="nextmajor" />
    </exec>
    <antcall target="release" />
  </target>

  <target name="minor-release" depends="base">
    <exec executable="java"
          outputproperty="jamon.version.next">
      <arg value="-cp" />
      <arg value="${core.classes.dir}" />
      <arg value="org.jamon.ShowVersion" />
      <arg value="nextminor" />
    </exec>
    <antcall target="release" />
  </target>

  <target name="bugfix-release" depends="base">
    <exec executable="java"
          outputproperty="jamon.version.next">
      <arg value="-cp" />
      <arg value="${core.classes.dir}" />
      <arg value="org.jamon.ShowVersion" />
      <arg value="nextsub" />
    </exec>
    <antcall target="release" />
  </target>

  <target name="release" if="jamon.version.next" >
    <echo message="Current version: ${org.jamon.version}" />
    <echo message="Next version: ${jamon.version.next}" />
    <input message="Press enter to continue ..." />
    <property name="file" value="core/src/org/jamon/Resources.properties" />
    <cvs command="edit ${file}"/>
    <replace file="${file}"
             token="version=${org.jamon.version}"
             value="version=${jamon.version.next}" />
    <replace file="${file}"
             token="release=false"
             value="release=true" />
    <cvs command="commit -m 'version bump to ${jamon.version.next}' ${file}" />
    <antcall target="jar" />
    <exec executable="java"
          outputproperty="jamon.version.cvs">
      <arg value="-cp" />
      <arg value="${core.classes.dir}" />
      <arg value="org.jamon.ShowVersion" />
      <arg value="cvstag" />
    </exec>
    <cvs command="tag RELEASE-${jamon.version.cvs}" />
    <cvs command="edit ${file}"/>
    <replace file="${file}"
             token="release=true"
             value="release=false" />
    <cvs command="commit -m 'dev version of ${jamon.version.next}' ${file}" />
  </target>

  <target name="javadoc" description="Build the javadoc">
    <ant dir="core" target="javadoc"/>
  </target>

  <target name="doc" depends="jar" description="Build documentation">
    <ant dir="doc" target="build" />
  </target>

  <target name="bindist" depends="jar,doc,javadoc">
    <tar tarfile="${tarball.bin}" compression="gzip" >
      <tarfileset dir="."
                  prefix="${tarfilebase}"
                  includes="${jarfile},LICENSE,README" />
      <tarfileset dir="doc/build/www"
                  prefix="${tarfilebase}/doc"
                  includes="**" />
      <tarfileset dir="core/build"
                  prefix="${tarfilebase}"
                  includes="javadoc/**" />
    </tar>
    <zip zipfile="${zip.bin}" >
      <zipfileset dir="."
                  prefix="${tarfilebase}"
                  includes="${jarfile},LICENSE,README" />
      <zipfileset dir="doc/build/www"
                  prefix="${tarfilebase}/doc"
                  includes="**" />
      <zipfileset dir="core/build"
                  prefix="${tarfilebase}"
                  includes="javadoc/**" />
    </zip>
  </target>

  <target name="srcdist">
    <tar tarfile="${tarball.src}" compression="gzip" >
      <tarfileset dir="." prefix="${tarfilebase}" >
        <exclude name="${jarfile}" />
        <exclude name="${stage.dir}" />
        <exclude name="${stage.dir}/**" />
        <exclude name="${tarball.bin}" />
        <exclude name="${tarball.src}" />
        <exclude name="${zip.bin}" />
        <exclude name="${zip.src}" />
        <exclude name="**/build.properties" />
        <exclude name="**/build" />
        <exclude name="**/build/**" />
      </tarfileset>
    </tar>
    <zip destfile="${zip.src}" >
      <zipfileset dir="." prefix="${tarfilebase}" >
        <exclude name="${jarfile}" />
        <exclude name="${stage.dir}" />
        <exclude name="${stage.dir}/**" />
        <exclude name="${zip.bin}" />
        <exclude name="${zip.src}" />
        <exclude name="${tarball.bin}" />
        <exclude name="${tarball.src}" />
        <exclude name="**/build.properties" />
        <exclude name="**/build" />
        <exclude name="**/build/**" />
      </zipfileset>
    </zip>
  </target>


  <target name="localstage" depends="srcdist,bindist,doc" >
    <mkdir dir="${stage.dir}" />
    <copy todir="${stage.dir}" >
      <fileset dir="doc/build/www" />
      <fileset dir="core/build" includes="javadoc/**" />
    </copy>
    <copy todir="${dist.dir}" >
      <fileset dir="." includes="${tarball.bin}" />
      <fileset dir="." includes="${tarball.src}" />
      <fileset dir="." includes="${zip.bin}" />
      <fileset dir="." includes="${zip.src}" />
    </copy>
  </target>

  <target name="push"
          depends="localstage"
          description="Push the current workspace live">
    <exec dir="${stage.dir}" executable="rsync">
      <arg value="--rsh=ssh" />
      <arg value="--verbose" />
      <arg value="--recursive" />
      <arg value="--relative" />
      <arg value="--cvs-exclude" />
      <arg value="--delete" />
      <arg value="--compress" />
      <arg value="--exclude" />
      <arg value="dist" />
      <arg value="." />
      <arg value="jamon@www.jamon.org:/home/jamon/www${site.dir}" />
    </exec>
    <exec dir="${dist.dir}" executable="rsync">
      <arg value="--rsh=ssh" />
      <arg value="--verbose" />
      <arg value="--recursive" />
      <arg value="--relative" />
      <arg value="--cvs-exclude" />
      <arg value="--compress" />
      <arg value="." />
      <arg value="jamon@www.jamon.org:/home/jamon/www${site.dir}/dist" />
    </exec>
  </target>

</project>
