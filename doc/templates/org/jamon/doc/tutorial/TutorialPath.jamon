<%doc>
  This Source Code Form is subject to the terms of the Mozilla Public
  License, v. 2.0. If a copy of the MPL was not distributed with this
  file, You can obtain one at http://mozilla.org/MPL/2.0/.
</%doc>
<%extends _TutorialBase>
<%override title>Tutorial</%override>

<h2>Tutorial</h2>

    <h3>Jamon Programming Examples</h3>

    This sequence shows examples of using Jamon to display
progressively more complex content. The first example, of course, is a
template that displays "Hello world!" By the end of the tutorial
sequence, you will know how to use advanced Jamon features such as
template inheritance, calling another template from within a template,
and passing a block of Jamon text to be evaluated in another template.
<p>
    While powerful, Jamon is quite terse in its syntax, so it is
fairly easy to learn. Just work through this tutorial and find out for
yourself!  <p>
    <ol>
      <li>
        <a href="TutorialSample1.html">The "Hello world" template</a>
      </li>
      <li>
        <a href="TutorialSample2.html">Templates with dynamic content</a>
      </li>
      <li>
        <a href="TutorialSample3.html">Templates with arguments</a>
      </li>
      <li>
        <a href="TutorialSample4.html">Escaping text</a>
      </li>
      <li>
        <a href="TutorialSample5.html">More advanced Jamon tags</a>
      </li>
      <li>
        <a href="TutorialSample6.html">Calling another template from a template</a>
      </li>
      <li>
        <a href="TutorialSample7.html">Sub templates - functional decomposition of templates</a>
      </li>
      <li>
        <a href="TutorialSample8.html">Template fragments - passing blocks of code to evaluate in another template </a>
      </li>
      <li>
        <a href="TutorialSample9.html">Template inheritance - composing template output through inheritance</a>
      </li>
      <li>
        <a href="TutorialSample10.html">Template inheritance - inheriting subtemplates</a>
      </li>
      <li>
        <a href="TutorialSample11.html">Jamon Context - providing data to all templates at once</a>
      </li>
    </ol>
